

.landingpage
{
  &.debug
  {
    border:1px solid fuchsia;

    .group
    {
      .projects
      {
        border:1px solid yellow;

        .project
        {
          border:1px solid green;
        }
      }

    }
    div[data-prototype]
    {
      opacity: 0.3;
      background-color: rgba(255, 217, 0, 0.514);
      display: block;
    }
  }

  div[data-prototype]
  {
    display: none !important;
  }





  --gapspace:16px;    // gaps between layout areas
  --gapspace-s:8px;   // smaller gaps between layout areas
  --ctrlspace:2px;    // small spacing for padding/margins between i.e. icon and label
  --corner:4px;       //borderradius

  user-select: none;
  .col
  {
    display: flex;
    flex-direction: column;
    gap: var(--gapspace);
    padding-top: var(--gapspace);
    padding-bottom: var(--gapspace);
  }

  .lucide
  {
    width: 19px;
    height: auto;
    stroke: currentColor;
    fill: none;
    stroke-width: 1px;
    stroke-linecap: round;
    stroke-linejoin: round;
  }

  button
  {
    display: flex;
    padding: var(--ctrlspace);
    justify-content: center;
    align-items: center;

    cursor:pointer;

    color: var(--vscode-icon-foreground);
    background-color: transparent;
    &:hover { background-color: var(--vscode-toolbar-hoverBackground); }

    border: none;
    border-radius: var(--corner);

    span
    {
      margin-left: var(--ctrlspace);
      margin-right: var(--ctrlspace);
      padding-left: var(--ctrlspace);
      padding-right: var(--ctrlspace);
    }
  }

  space, .space
  {
    flex-grow:1;
  }

  .muted-hint
  {
    opacity: 0.5;
    font-style: italic;
  }

  .tools //for all toolbars
  {
    display: flex;
    gap:var(--ctrlspace);
    flex-direction: row;
    align-items: center;

    .movegrip
    {
      cursor:grab;
      svg circle { fill:currentColor; }
    }
  }

  .group
  {
    position: relative;
    margin-bottom: var(--gapspace);
    
    .titlebar
    {
      display: flex;
      gap:var(--gapspace-s);
      margin-bottom:var(--gapspace);

      .group-label //h1
      {
        // color:cornflowerblue;
        font-weight: 400;
        margin:0;
        margin-top: -4px; //temporary Bugfix as text is not in line with tools
        cursor:pointer;
        border:1px solid transparent;
        padding:0; //var(--gapspace-s);

        border-radius: var(--corner);
        &:hover
        {          
          border-color: var(--vscode-input-border);         
        }
      }

      @at-root body.is-dragging // is currently in card-dragging operation
      {
        .group-label:hover //dragging over group label = show bottom line drop indicator
        { 
          border:none !important; 
          border-radius: 0 !important; 
          border-bottom: calc( 0.25 * var(--gapspace) ) solid var(--vscode-notebook-cellInsertionIndicator) !important; 
        }
      }

      .tools //specific toolbar in titlebar of group
      {
      }      
      &:not(:hover)
      {
        .tools.hover-only {visibility: hidden;}
      }
    }

    //Drag-drop for the group 
    @at-root body:not(.is-dragging) //not in dragging operation
    {
      .dragbefore, .dragafter //hide the insertion targets
      {
        //display: none;
        pointer-events: none;
      }
    }

    @at-root body.is-dragging-group // is currently in dragging operation
    {
      .dragged-item //for the dragged item itself, indicate visually, hide the hotspots/lock mouse interaction
      {
        opacity:0.5;
        outline:1px dashed var(--vscode-notebook-cellInsertionIndicator) !important;
        pointer-events: none;            
      }
    
      &:hover
      {
        .dragup, .dragdown //mouse over drop zone -> draw insertion mark (via side-border)
        {
          width: 100%; 
          height: calc( 50% + var(--gapspace-s) );
          position: absolute;
          z-index: 1;
          &:hover {border-color: var(--vscode-notebook-cellInsertionIndicator);}
        }
        .dragup
        {              
          border-top: calc(  0.25 * var(--gapspace) ) solid transparent;
          margin-top: calc( -0.625 * var(--gapspace) );
          // background-color: rgba(255, 166, 0, 0.438);
        }

        .dragdown
        {
          bottom:0;
          border-bottom: calc(  0.25 * var(--gapspace) ) solid transparent;
          margin-bottom: calc( -0.625 * var(--gapspace) );
          // background-color: rgba(0, 255, 255, 0.479);
        }
      }
    }


    .projects
    {
      &.grid
      {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: flex-start;
        align-content: flex-start;
        gap: var(--gapspace);
      }

      .project //card
      {        
        width: 150px;
        height: 120px;
        outline: 1px solid var(--vscode-editorWidget-border);
        box-shadow: 0 2px 5px 0 #9393932e;
        display: flex;
        flex-direction: column;
        border-radius: var(--corner);
        position: relative;
        background:var(--shade-color);

        &:not(:hover)
        {
          .tools {visibility: hidden;}
        }

        .tools //specific toolbar in project card
        {          
          margin: var(--ctrlspace);

          //.movegrip is now generalized above â¬†
        }

        .textblock
        {
          margin: var(--ctrlspace);
          padding: var(--ctrlspace) calc( var(--ctrlspace) * 2 );
          
          flex-grow: 1;
          display: flex;
          align-items: flex-end;

          overflow:hidden;
          //font-size:large;
          cursor: pointer;

          [data-field="project.label"]
          {
            // max-height: 50%;

            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
          }
        }

        .pictoral
        {
          position: absolute;
          //background: yellow;
          width: 100%;
          height: 100%;
          display: flex;
          justify-content: center;
          align-items: center;
          z-index: -1;

          .icon
          {
            scale: 2.4;
            opacity: .3;
            transform: translateY(-2px);
          }
        }
        @at-root body:not(.is-dragging) //not in dragging operation
        {
          .dragbefore, .dragafter //hide the insertion targets
          {
            display: none;
          }
        }

        @at-root body.is-dragging // is currently in dragging operation
        {
          .dragged-item //for the dragged item itself, indicate visually, hide the hotspots/lock mouse interaction
          {
            opacity:0.5;
            outline:1px dashed var(--vscode-notebook-cellInsertionIndicator) !important;
            pointer-events: none;            
          }
        
          &:hover
          {
            .dragbefore, .dragafter //mouse over drop zone -> draw insertion mark (via side-border)
            {
              width: calc( 50% + var(--gapspace-s) );
              height: 100%;
              position: absolute;
              z-index: 1;
              &:hover {border-color: var(--vscode-notebook-cellInsertionIndicator);}
            }
            .dragbefore
            {              
              border-left: calc(  0.25 * var(--gapspace) ) solid transparent;
              margin-left: calc( -0.625 * var(--gapspace) );
            }

            .dragafter
            {
              right:0;
              border-right: calc(  0.25 * var(--gapspace) ) solid transparent;
              margin-right: calc( -0.625 * var(--gapspace) );
            }
          }
        }

      }
    }

  }


  .modal
  {
    &.hidden
    {
      display: none;
    }

    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: transparent; // var(--vscode-editor-background);
    z-index: 10;

    .palette
    {
      position: absolute;
      border: 1px solid var(--vscode-menu-border);
      min-width: 4px;
      min-height: 4px;
      background-color: var(--vscode-menu-background);
      box-shadow: 0px 3px 7px rgba(0, 0, 0, 0.2);
      top: 20px;
      left: 20px;
      border-radius: var(--corner);
      display: flex;
      flex-wrap: wrap;
      flex-direction: row;
      gap: var(--gapspace-s);
      padding: var(--gapspace-s);

      width: calc((var(--gapspace) + var(--gapspace-s))* 5 + 2px); //(color slot width + gap) * numberOfSlotsPerLine + paletteBorder

      > div //color slot
      {
        width: var(--gapspace);
        height: var(--gapspace);
        border-radius: 50%;
        border: 1px solid rgba(0, 0, 0, 0.3);
        cursor: pointer;        
        background-color:var(--shade-color);

        &[data-shade=""] // "clear" slot
        {
          background-image: linear-gradient(45deg, rgba(0, 0, 0, 0.3) 5.56%, transparent 5.56%, transparent 50%, rgba(0, 0, 0, 0.3) 50%, rgba(0, 0, 0, 0.3) 55.56%, transparent 55.56%, transparent 100%);
          background-size: 4px 4px;
        }
      }
    }
  }

  //--shade-color: blue;

  *[data-shade="red"] { --shade-color: #D50000;}
  *[data-shade="orange"] { --shade-color: #FF5722;}
  *[data-shade="yellow"] { --shade-color: #FFC107;}
  *[data-shade="green"] { --shade-color: #7CB342;}
  *[data-shade="teal"] { --shade-color: #009688;}
  *[data-shade="pink"] { --shade-color: #C51162;}
  *[data-shade="purple"] { --shade-color: #9C27B0;}
  *[data-shade="blue"] { --shade-color: #3F51B5;}
  *[data-shade="cyan"] { --shade-color: #2196F3;}
  *[data-shade="gray"] { --shade-color: #9E9E9E;}
  *[data-shade="silver"] { --shade-color: #607D8B;}
  *[data-shade="brown"] { --shade-color: #795548;}
  *[data-shade="white"] { --shade-color: #FAFAFA;}
  *[data-shade="black"] { --shade-color: #212121;}

}

//ensure drag cursor is visible everywhere while dragging
body.is-dragging *, body.is-dragging-group *
{
  cursor: grabbing !important;
  cursor: -moz-grabbing !important;
  cursor: -webkit-grabbing !important;    
}